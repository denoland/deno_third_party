"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = __importDefault(require("debug"));
const typescript_1 = __importDefault(require("typescript"));
const shared_1 = require("./shared");
const log = debug_1.default('typescript-eslint:typescript-estree:createIsolatedProgram');
/**
 * @param code The code of the file being linted
 * @returns Returns a new source file and program corresponding to the linted code
 */
function createIsolatedProgram(code, extra) {
    log('Getting isolated program for: %s', extra.filePath);
    const compilerHost = {
        fileExists() {
            return true;
        },
        getCanonicalFileName() {
            return extra.filePath;
        },
        getCurrentDirectory() {
            return '';
        },
        getDirectories() {
            return [];
        },
        getDefaultLibFileName() {
            return 'lib.d.ts';
        },
        // TODO: Support Windows CRLF
        getNewLine() {
            return '\n';
        },
        getSourceFile(filename) {
            return typescript_1.default.createSourceFile(filename, code, typescript_1.default.ScriptTarget.Latest, true);
        },
        readFile() {
            return undefined;
        },
        useCaseSensitiveFileNames() {
            return true;
        },
        writeFile() {
            return null;
        },
    };
    const program = typescript_1.default.createProgram([extra.filePath], Object.assign({ noResolve: true, target: typescript_1.default.ScriptTarget.Latest, jsx: extra.jsx ? typescript_1.default.JsxEmit.Preserve : undefined }, shared_1.DEFAULT_COMPILER_OPTIONS), compilerHost);
    const ast = program.getSourceFile(extra.filePath);
    if (!ast) {
        throw new Error('Expected an ast to be returned for the single-file isolated program.');
    }
    return { ast, program };
}
exports.createIsolatedProgram = createIsolatedProgram;
//# sourceMappingURL=createIsolatedProgram.js.map