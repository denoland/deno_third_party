error[E0195]: lifetime parameters or bounds on method `no_bound` do not match the trait declaration
  --> $DIR/regions-bound-missing-bound-in-impl.rs:28:5
   |
LL |     fn no_bound<'b>(self, b: Inv<'b>);
   |     ---------------------------------- lifetimes in impl do not match this method in trait
...
LL |     fn no_bound<'b:'a>(self, b: Inv<'b>) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetimes do not match method in trait

error[E0195]: lifetime parameters or bounds on method `has_bound` do not match the trait declaration
  --> $DIR/regions-bound-missing-bound-in-impl.rs:32:5
   |
LL |     fn has_bound<'b:'a>(self, b: Inv<'b>);
   |     -------------------------------------- lifetimes in impl do not match this method in trait
...
LL |     fn has_bound<'b>(self, b: Inv<'b>) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetimes do not match method in trait

error[E0308]: method not compatible with trait
  --> $DIR/regions-bound-missing-bound-in-impl.rs:36:5
   |
LL |     fn wrong_bound1<'b,'c,'d:'a+'c>(self, b: Inv<'b>, c: Inv<'c>, d: Inv<'d>) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch
   |
   = note: expected type `fn(&'a isize, Inv<'c>, Inv<'c>, Inv<'d>)`
              found type `fn(&'a isize, Inv<'_>, Inv<'c>, Inv<'d>)`
note: the lifetime 'c as defined on the method body at 36:5...
  --> $DIR/regions-bound-missing-bound-in-impl.rs:36:5
   |
LL |     fn wrong_bound1<'b,'c,'d:'a+'c>(self, b: Inv<'b>, c: Inv<'c>, d: Inv<'d>) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: ...does not necessarily outlive the lifetime 'c as defined on the method body at 36:5
  --> $DIR/regions-bound-missing-bound-in-impl.rs:36:5
   |
LL |     fn wrong_bound1<'b,'c,'d:'a+'c>(self, b: Inv<'b>, c: Inv<'c>, d: Inv<'d>) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0276]: impl has stricter requirements than trait
  --> $DIR/regions-bound-missing-bound-in-impl.rs:53:5
   |
LL |     fn another_bound<'x: 'a>(self, x: Inv<'x>, y: Inv<'t>);
   |     ------------------------------------------------------- definition of `another_bound` from trait
...
LL |     fn another_bound<'x: 't>(self, x: Inv<'x>, y: Inv<'t>) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `'x: 't`

error: aborting due to 4 previous errors

Some errors occurred: E0195, E0276, E0308.
For more information about an error, try `rustc --explain E0195`.
