error[E0505]: cannot move out of `x` because it is borrowed
  --> $DIR/closure-borrow-spans.rs:7:13
   |
LL |     let f = || x.len();
   |             -- - borrow occurs due to use in closure
   |             |
   |             borrow of `x` occurs here
LL |     let y = x; //~ ERROR
   |             ^ move out of `x` occurs here
LL |     f.use_ref();
   |     - borrow later used here

error[E0502]: cannot borrow `x` as mutable because it is also borrowed as immutable
  --> $DIR/closure-borrow-spans.rs:13:13
   |
LL |     let f = || x;
   |             -- - first borrow occurs due to use of `x` in closure
   |             |
   |             immutable borrow occurs here
LL |     let y = &mut x; //~ ERROR
   |             ^^^^^^ mutable borrow occurs here
LL |     f.use_ref();
   |     - immutable borrow later used here

error[E0597]: `x` does not live long enough
  --> $DIR/closure-borrow-spans.rs:21:16
   |
LL |         f = || x; //~ ERROR
   |             -- ^ borrowed value does not live long enough
   |             |
   |             value captured here
LL |     }
   |     - `x` dropped here while still borrowed
LL |     f.use_ref();
   |     - borrow later used here

error[E0506]: cannot assign to `x` because it is borrowed
  --> $DIR/closure-borrow-spans.rs:28:5
   |
LL |     let f = || x;
   |             -- - borrow occurs due to use in closure
   |             |
   |             borrow of `x` occurs here
LL |     x = 1; //~ ERROR
   |     ^^^^^ assignment to borrowed `x` occurs here
LL |     f.use_ref();
   |     - borrow later used here

error[E0503]: cannot use `x` because it was mutably borrowed
  --> $DIR/closure-borrow-spans.rs:34:13
   |
LL |     let f = || x = 0;
   |             -- - borrow occurs due to use of `x` in closure
   |             |
   |             borrow of `x` occurs here
LL |     let y = x; //~ ERROR
   |             ^ use of borrowed `x`
LL |     f.use_ref();
   |     - borrow later used here

error[E0502]: cannot borrow `x` as immutable because it is also borrowed as mutable
  --> $DIR/closure-borrow-spans.rs:40:13
   |
LL |     let f = || x = 0;
   |             -- - first borrow occurs due to use of `x` in closure
   |             |
   |             mutable borrow occurs here
LL |     let y = &x; //~ ERROR
   |             ^^ immutable borrow occurs here
LL |     f.use_ref();
   |     - mutable borrow later used here

error[E0499]: cannot borrow `x` as mutable more than once at a time
  --> $DIR/closure-borrow-spans.rs:46:13
   |
LL |     let f = || x = 0;
   |             -- - first borrow occurs due to use of `x` in closure
   |             |
   |             first mutable borrow occurs here
LL |     let y = &mut x; //~ ERROR
   |             ^^^^^^ second mutable borrow occurs here
LL |     f.use_ref();
   |     - first borrow later used here

error[E0597]: `x` does not live long enough
  --> $DIR/closure-borrow-spans.rs:54:16
   |
LL |         f = || x = 0; //~ ERROR
   |             -- ^ borrowed value does not live long enough
   |             |
   |             value captured here
LL |     }
   |     - `x` dropped here while still borrowed
LL |     f.use_ref();
   |     - borrow later used here

error[E0506]: cannot assign to `x` because it is borrowed
  --> $DIR/closure-borrow-spans.rs:61:5
   |
LL |     let f = || x = 0;
   |             -- - borrow occurs due to use in closure
   |             |
   |             borrow of `x` occurs here
LL |     x = 1; //~ ERROR
   |     ^^^^^ assignment to borrowed `x` occurs here
LL |     f.use_ref();
   |     - borrow later used here

error[E0505]: cannot move out of `x` because it is borrowed
  --> $DIR/closure-borrow-spans.rs:67:13
   |
LL |     let f = || *x = 0;
   |             --  - borrow occurs due to use in closure
   |             |
   |             borrow of `x` occurs here
LL |     let y = x; //~ ERROR
   |             ^ move out of `x` occurs here
LL |     f.use_ref();
   |     - borrow later used here

error[E0501]: cannot borrow `x` as immutable because previous closure requires unique access
  --> $DIR/closure-borrow-spans.rs:73:13
   |
LL |     let f = || *x = 0;
   |             --  - first borrow occurs due to use of `x` in closure
   |             |
   |             closure construction occurs here
LL |     let y = &x; //~ ERROR
   |             ^^ second borrow occurs here
LL |     f.use_ref();
   |     - first borrow later used here

error[E0501]: cannot borrow `x` as mutable because previous closure requires unique access
  --> $DIR/closure-borrow-spans.rs:79:13
   |
LL |     let f = || *x = 0;
   |             --  - first borrow occurs due to use of `x` in closure
   |             |
   |             closure construction occurs here
LL |     let y = &mut x; //~ ERROR
   |             ^^^^^^ second borrow occurs here
LL |     f.use_ref();
   |     - first borrow later used here

error[E0597]: `x` does not live long enough
  --> $DIR/closure-borrow-spans.rs:88:17
   |
LL |         f = || *x = 0; //~ ERROR
   |             --  ^ borrowed value does not live long enough
   |             |
   |             value captured here
LL |     }
   |     - `x` dropped here while still borrowed
LL |     f.use_ref();
   |     - borrow later used here

error[E0506]: cannot assign to `*x` because it is borrowed
  --> $DIR/closure-borrow-spans.rs:95:5
   |
LL |     let f = || *x = 0;
   |             --  - borrow occurs due to use in closure
   |             |
   |             borrow of `*x` occurs here
LL |     *x = 1; //~ ERROR
   |     ^^^^^^ assignment to borrowed `*x` occurs here
LL |     f.use_ref();
   |     - borrow later used here

error: aborting due to 14 previous errors

Some errors occurred: E0499, E0501, E0502, E0503, E0505, E0506, E0597.
For more information about an error, try `rustc --explain E0499`.
