warning: not reporting region error due to nll
  --> $DIR/projection-one-region-closure.rs:55:39
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                                       ^^^^^^^

warning: not reporting region error due to nll
  --> $DIR/projection-one-region-closure.rs:67:39
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                                       ^^^^^^^

warning: not reporting region error due to nll
  --> $DIR/projection-one-region-closure.rs:89:39
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                                       ^^^^^^^

note: External requirements
  --> $DIR/projection-one-region-closure.rs:55:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0/1:19 ~ projection_one_region_closure[317d]::no_relationships_late[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               T,
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#2r ()>, T))
           ]
   = note: number of external vids: 3
   = note: where T: '_#2r
   = note: where '_#1r: '_#2r

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/projection-one-region-closure.rs:55:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `T: ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`...

error: free region `ReEarlyBound(0, 'b)` does not outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`
  --> $DIR/projection-one-region-closure.rs:55:20
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                    ^^^^

note: No external requirements
  --> $DIR/projection-one-region-closure.rs:51:1
   |
LL | / fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
LL | | {
...  |
LL | |     //~| ERROR does not outlive free region
LL | | }
   | |_^
   |
   = note: defining type: DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]) with substs [
               '_#1r,
               T
           ]

note: External requirements
  --> $DIR/projection-one-region-closure.rs:67:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0/1:23 ~ projection_one_region_closure[317d]::no_relationships_early[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               '_#2r,
               T,
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#3r ()>, T))
           ]
   = note: number of external vids: 4
   = note: where T: '_#3r
   = note: where '_#2r: '_#3r

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/projection-one-region-closure.rs:67:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...

error: free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`
  --> $DIR/projection-one-region-closure.rs:67:20
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                    ^^^^

note: No external requirements
  --> $DIR/projection-one-region-closure.rs:62:1
   |
LL | / fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
LL | |     'a: 'a,
...  |
LL | |     //~| ERROR does not outlive free region
LL | | }
   | |_^
   |
   = note: defining type: DefId(0/0:9 ~ projection_one_region_closure[317d]::no_relationships_early[0]) with substs [
               '_#1r,
               '_#2r,
               T
           ]

note: External requirements
  --> $DIR/projection-one-region-closure.rs:89:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0/1:27 ~ projection_one_region_closure[317d]::projection_outlives[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               '_#2r,
               T,
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#3r ()>, T))
           ]
   = note: number of external vids: 4
   = note: where T: '_#3r
   = note: where '_#2r: '_#3r

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/projection-one-region-closure.rs:89:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...

error: free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`
  --> $DIR/projection-one-region-closure.rs:89:20
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                    ^^^^

note: No external requirements
  --> $DIR/projection-one-region-closure.rs:74:1
   |
LL | / fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
LL | |     T::AssocType: 'a,
...  |
LL | |     //~| ERROR free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`
LL | | }
   | |_^
   |
   = note: defining type: DefId(0/0:10 ~ projection_one_region_closure[317d]::projection_outlives[0]) with substs [
               '_#1r,
               '_#2r,
               T
           ]

note: External requirements
  --> $DIR/projection-one-region-closure.rs:102:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: DefId(0/1:31 ~ projection_one_region_closure[317d]::elements_outlive[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               '_#2r,
               T,
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#3r ()>, T))
           ]
   = note: number of external vids: 4
   = note: where T: '_#3r
   = note: where '_#2r: '_#3r

note: No external requirements
  --> $DIR/projection-one-region-closure.rs:96:1
   |
LL | / fn elements_outlive<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
LL | |     T: 'a,
...  |
LL | |     with_signature(cell, t, |cell, t| require(cell, t));
LL | | }
   | |_^
   |
   = note: defining type: DefId(0/0:11 ~ projection_one_region_closure[317d]::elements_outlive[0]) with substs [
               '_#1r,
               '_#2r,
               T
           ]

error: aborting due to 6 previous errors

For more information about this error, try `rustc --explain E0309`.
